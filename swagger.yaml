openapi: 3.0.1
info:
  title: OpenWorld Terrain API
  description: For the terrain-experiment project
  contact:
    name: https://github.com/mdekrey
  license:
    name: MIT
  version: 1.0.0
servers:
- url: http://localhost:55779/api
paths:
  /terrain:
    post:
      tags:
        - Terrain
      description: Gets the terrain for a region
      operationId: getTerrain
      requestBody:
        description: Describes the region to retrieve
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTerrainSettingsRequest'
        required: true
      responses:
        200:
          description: terrain response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: array
                  items:
                    type: array
                    items:
                      type: integer
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  /terrain/cave:
    post:
      tags:
        - Terrain
      description: Gets the cave at a specific location
      operationId: getCave
      requestBody:
        description: Describes the cave to retrieve
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCaveRequest'
        required: true
      responses:
        200:
          description: cave response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCaveResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
  # /pets/{id}:
  #   get:
  #     description: Returns a user based on a single ID, if the user does not have
  #       access to the pet
  #     operationId: findPetById
  #     parameters:
  #     - name: id
  #       in: path
  #       description: ID of pet to fetch
  #       required: true
  #       schema:
  #         type: integer
  #         format: int64
  #     responses:
  #       200:
  #         description: pet response
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Pet'
  #           application/xml:
  #             schema:
  #               $ref: '#/components/schemas/Pet'
  #           text/xml:
  #             schema:
  #               $ref: '#/components/schemas/Pet'
  #           text/html:
  #             schema:
  #               $ref: '#/components/schemas/Pet'
  #       default:
  #         description: unexpected error
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/ErrorModel'
  #           application/xml:
  #             schema:
  #               $ref: '#/components/schemas/ErrorModel'
  #           text/xml:
  #             schema:
  #               $ref: '#/components/schemas/ErrorModel'
  #           text/html:
  #             schema:
  #               $ref: '#/components/schemas/ErrorModel'
  #   delete:
  #     description: deletes a single pet based on the ID supplied
  #     operationId: deletePet
  #     parameters:
  #     - name: id
  #       in: path
  #       description: ID of pet to delete
  #       required: true
  #       schema:
  #         type: integer
  #         format: int64
  #     responses:
  #       204:
  #         description: pet deleted
  #         content: {}
  #       default:
  #         description: unexpected error
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/ErrorModel'
components:
  schemas:
    ErrorModel:
      required:
      - code
      type: object
      properties:
        code:
          type: string
          pattern: '^[A-Za-z0-9-]+(:[A-Za-z0-9-]+)*$'
        args:
          type: object
          additionalProperties:
            type: string
    GetTerrainSettingsRequest:
      required:
      - coordinate
      - isDetail
      type: object
      properties:
        coordinate:
          $ref: '#/components/schemas/GameCoordinate'
        isDetail:
          type: boolean
        size:
          $ref: '#/components/schemas/GameSize'
          default: { width: 100, height: 100 }
    GetCaveRequest:
      required:
      - coordinate
      type: object
      properties:
        coordinate:
          $ref: '#/components/schemas/GameCoordinate'
    GetCaveResponse:
      required:
        - isSolid
        - entrance
        - treasure
      type: object
      properties:
        isSolid:
          type: array
          items:
            type: array
            items:
              type: boolean
        entrance:
          $ref: '#/components/schemas/GameCoordinate'
        treasure:
          type: array
          items:
            $ref: '#/components/schemas/GameCoordinate'
    GameCoordinate:
      required:
      - x
      - y
      type: object
      properties:
        x:
          type: integer
        y:
          type: integer
    GameSize:
      required:
      - width
      - height
      type: object
      properties:
        width:
          type: integer
        height:
          type: integer
    # Pet:
    #   allOf:
    #   - $ref: '#/components/schemas/NewPet'
    #   - required:
    #     - id
    #     type: object
    #     properties:
    #       id:
    #         type: integer
    #         format: int64
    # NewPet:
    #   required:
    #   - name
    #   type: object
    #   properties:
    #     name:
    #       type: string
    #     tag:
    #       type: string
